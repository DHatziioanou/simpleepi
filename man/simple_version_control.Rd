% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simple_vc.R
\name{simple_version_control}
\alias{simple_version_control}
\title{Title Compare two versions of data with the same length and mark new data in a version control column}
\usage{
simple_version_control(
  dt,
  id,
  oldcol,
  newcol,
  vccol = NULL,
  olddate = "original",
  newdate = Sys.Date(),
  type = "list",
  out = NULL
)
}
\arguments{
\item{dt}{Input data}

\item{id}{Unique ID column}

\item{oldcol}{Column of historic data}

\item{newcol}{Column of updated data}

\item{vccol}{Optional name of existing version control column or name to assign to new one. If missing default uses common part of oldcol and newcol strings followed by _VC or uses oldcol if no common string.}

\item{olddate}{date of previous data}

\item{newdate}{date of new data}

\item{type}{one of "list" or "flat"}

\item{out}{one of "table" or "vector" or NULL. NULL returns table and writes to as rds}
}
\value{
returns vccol newdate with new changes; records 1st record per ID which is not NA then adds any changes to the oldcol values. In list format this is by adding new data to new rows for each ID and for flat format data in added to vccol in format olddate;oldcol and any changes are added as newdate;newcol
}
\description{
Title Compare two versions of data with the same length and mark new data in a version control column
}
\examples{
# dt <- data.table::data.table(c(1:6), c("A", "B", "C", NA, "D", ""), c("", "Test", NA, NA, "C", NA))
# dt$VC <- simple_version_control(dt,
#   oldcol = "V2", newcol = "V3", id = "V1",
#   olddate = "old", newdate = "new",
#   type = "flat",
#   out = "vector")

# dt$VC <- simple_version_control(dt,
#    oldcol = "V2", newcol = "V3", id = "V1",
#    olddate = "old", newdate = "new",
#    type = "list",
#    out = "vector")

}
